version: "3.9"
services:
  nginx:
    image: nginx:alpine
    hostname: nginx
    volumes:
      - "/volume/mapos/000/etc/nginx/conf.d/:/etc/nginx/conf.d/"
      - "/volume/mapos/000/app/:/var/www/html"
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    env_file:
      - ".env"
    command: /bin/sh -c "envsubst '$$NGINX_HOST $$NGINX_PORT' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    depends_on:
      - php-fpm
      - mysql

  php-fpm:
    hostname: php-fpm
    build:
      context: /volume/mapos/000/etc/php
      dockerfile: Dockerfile
    restart: always
    volumes:
      - "/volume/mapos/000/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "/volume/mapos/000/etc/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini"
      - "/volume/mapos/000/app/:/var/www/html"


  composer:
    hostname: composer
    build:
      context: /volume/mapos/000/etc/composer
      dockerfile: Dockerfile
    volumes:
      - "/volume/mapos/000/app/:/app"
    command: install --ignore-platform-reqs --no-scripts



  mysql:
    image: mysql:${MYSQL_MAPOS_VERSION}
    hostname: mysql
    restart: always
    env_file:
      - ".env"
    environment:
      - MYSQL_DATABASE=${MYSQL_MAPOS_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_MAPOS_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_MAPOS_USER}
      - MYSQL_PASSWORD=${MYSQL_MAPOS_PASSWORD}
    ports:
      - "${MYSQL_MAPOS_PORT}:3306"
    volumes:
      - "/volume/mapos/000/var/mysql:/var/lib/mysql"

